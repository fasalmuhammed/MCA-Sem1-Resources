#include <iostream>
#include <string>
using namespace std;

class Animal {
public:
    virtual void make_sound() const { // Base class method should match the override signature
        cout << "This is the sound ";
    }

    // Virtual destructor to ensure proper cleanup
    virtual ~Animal() {}
};

class Cat : public Animal {
public:
    void make_sound() const override { // Override with matching signature
        cout << "Meow meow" << endl;
    }
};

class Dog : public Animal {
public:
    void make_sound() const override {
        cout << "Bow bow" << endl;
    }
};

int main() {
    Animal* animals[2]; // Array of base class pointers
    animals[0] = new Dog;
    animals[1] = new Cat;

    char ch;
    cout << "Which animal you need to make sound (D -> Dog, C -> Cat): ";
    cin >> ch;

    switch (ch) {
        case 'D':
        case 'd':
            animals[0]->make_sound(); // Call the dog’s sound
            break;
        case 'C':
        case 'c':
            animals[1]->make_sound(); // Call the cat’s sound
            break;
        default:
            cout << "Enter a valid input" << endl;
    }

    // Clean up memory
    delete animals[0];
    delete animals[1];

    return 0;
}
